extends layout

block stylesheets
  link(rel='stylesheet', href='/stylesheets/projectDetail.css')

block content
  .project-background
    .dashboard
      if errMsg
        h1= title
        p.error-message= errMsg
      else if projectDetail
        .project-header
          h1= projectDetail.address
          if currentUser && currentUser.isAdmin
            a#viewProject.button.header-button.project-button(href=`/users/${projectDetail.userId}/project/${projectDetail._id}/update`) 
              span#button-text Edit
              span#spinner-border.spinner-border.spinner-border-sm.d-none(role='status' aria-hidden='true')

        
        .project-details
          if currentUser && currentUser.isAdmin
            .detail-item
              h2 Type
              p.secondary-text= projectDetail.type
          
          .detail-item
            h2 Current Phase
            .phase-items
              if projectDetail.currentPhase === 1
                p.secondary-text 1 out of 4
              else if projectDetail.currentPhase === 2
                p.secondary-text 2 out of 4
              else if projectDetail.currentPhase === 3
                p.secondary-text 3 out of 4
              else 
                p.secondary-text 4 out of 4
              div.progress(role='progressbar', aria-label='Warning example', aria-valuenow='75', aria-valuemin='0', aria-valuemax='100')
                if projectDetail.currentPhase === 1
                  div.progress-bar(style='width: 25%')
                else if projectDetail.currentPhase === 2
                  div.progress-bar(style='width: 50%')
                else if projectDetail.currentPhase === 3
                  div.progress-bar(style='width: 75%')
                else 
                  div.progress-bar(style='width: 100%')
          
          if projectDetail.description && currentUser && currentUser.isAdmin
            .detail-item
              h2 Description
              p.secondary-text= projectDetail.description
        
        .updates-container
          .detail-item
            .updates-header
              h2 Current Update 
              if currentUser.isAdmin && update === null
                a.button.header-button.project-button(href=`/users/${projectDetail.userId}/project/${projectDetail._id}/weekly-update/create`) Add Update
              else if currentUser.isAdmin && update !== null || !currentUser.isAdmin && update !== null
                a.button.header-button.project-button(href=`/users/${projectDetail.userId}/project/${projectDetail._id}/weekly-updates`) View All
            if update !== null
              p.secondary-text.subtitle Week #{update.week} - #{update.title}
              if update.description 
                p.update-description.secondary-text= update.description
            else
              p.secondary-text No updates to see yet!

        if projectDetail.images && projectDetail.images.length > 0
          h2 Images
          .image-gallery
            .gallery-grid
              each image in projectDetail.images
                div.image-container(type="button" data-bs-toggle="modal" data-bs-target="#exampleModal" data-image-url=image.url)
                  img(src=image.url alt="Project Image")
                  p.image-date Uploaded: #{image.createdAt.toLocaleDateString()}

        else
          h2 Images
          p.secondary-text Nothing to see here yet.

  if projectDetail.images && projectDetail.images.length > 0
    div#exampleModal.modal.fade(tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true")
      div.modal-dialog.modal-dialog-centered
        div.modal-content
          div.modal-header
            button.btn-close(type="button" data-bs-dismiss="modal" aria-label="Close")
          div.modal-body
            img#modalImage.img-fluid(src="/images/placeholder-image.png" alt="Modal Image")

  script.
    document.addEventListener('DOMContentLoaded', function() {
      const modal = document.getElementById('exampleModal');
      const modalImage = document.getElementById('modalImage');
      const imageContainers = document.querySelectorAll('.image-container');
      
      imageContainers.forEach(container => {
        container.addEventListener('click', function() {
          const imageUrl = this.getAttribute('data-image-url');
          console.log(imageUrl);
          modalImage.src = imageUrl;
        });
      });

      modal.addEventListener('hidden.bs.modal', function () {
        modalImage.src = '';
      });
    });

    document.getElementById('viewProject').addEventListener('click', function(event) {
      const buttonText = document.getElementById('button-text');
      const spinner = document.getElementById('spinner-border');

      // Disable the button and show the spinner
      buttonText.classList.add('d-none');
      spinner.classList.remove('d-none');
    });

    window.addEventListener('pageshow', function(event) {
      const buttonText = document.getElementById('button-text');
      const spinner = document.getElementById('spinner-border');

      // Restore the button text and hide the spinner
      buttonText.classList.remove('d-none') // Set this to whatever the original text was
      spinner.classList.add('d-none');
    });