.dashboard {
  position: absolute;
  top: 15%;
  left: 50%;
  transform: translateX(-50%);
  width: 90%;
  max-width: 950px;
  border-radius: var(--border-radius);
  padding: var(--spacing-lg);
  text-align: left;
  border: var(--border-width) solid rgba(255, 255, 255, 0.5);
  /* backdrop-filter: blur(8px); */
  -webkit-backdrop-filter: blur(8px);
  background-color: rgba(0, 0, 0, 0.6);
  color: var(--color-primary);
  display: flex;
  flex-direction: column;
}

.project-background {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  width: 100%;
  padding: var(--spacing-xs);
}

.project-background::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  background: url('../images/Client\ Log\ In\ Photo-1.png'),
    var(--color-background);
  background-position: center;
  background-size: cover;
  background-blend-mode: multiply;
  z-index: -1;
}

.project-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-md);
}

.project-button-container {
  display: flex;
  gap: var(--spacing-xs);
}

.updates-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.updates-container {
  margin-bottom: var(--spacing-md);
}

.project-details {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-md);
}

.detail-item {
  background: rgba(255, 255, 255, 0.1);
  padding: var(--spacing-md);
  border-radius: var(--border-radius);
}

.phase-items {
  display: flex;
  flex-direction: column;
}

.progress {
  background-color: var(--color-secondary);
}

.progress-bar {
  background-color: var(--color-brand);
}

.update-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: var(--spacing-lg);
}

.image-gallery {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-lg);
}

.gallery-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: var(--spacing-md);
  margin-top: var(--spacing-md);
}

.image-container {
  position: relative;
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: transform 0.3s ease;
}

.gallery-image {
  border-radius: var(--border-radius);
}

.image-container img {
  width: 100%;
  height: 200px;
  object-fit: cover;
}

.image-date {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.7);
  color: var(--color-primary);
  padding: var(--spacing-xs);
  font-size: 0.8rem;
}

.project-button {
  padding: 8px var(--spacing-md);
}

.image-container img {
  background-image: url('../images/placeholder-image.jpeg');
  background-size: cover;
}

.delete-image-button {
  position: absolute;
  right: 0;
  top: 0;
  transform: translate(25%, -45%);
}

/* Existing CSS for .modal-content */
.modal-content {
  border-radius: var(--border-radius);
  text-align: center;
  border: var(--border-width) solid rgba(255, 255, 255, 0.5);
  /* backdrop-filter: blur(8px); */
  -webkit-backdrop-filter: blur(8px);
  background: rgba(255, 255, 255, 0.1);
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  margin: auto;
}

#exampleModal {
  overflow-y: hidden;
}

/* Modal Dialog - CRITICAL FOR STABILITY */
#exampleModal .modal-dialog {
  max-height: 90vh;
  width: 100%; /* Adapts up to the max-width set by .modal-lg or custom */
  margin: 30px auto;
  /* display: flex; */ /* Removed to restore standard block behavior for scrolling */
  /* align-items: center; */ /* Removed with display: flex */
  overflow-y: auto; /* Explicitly enable vertical scrolling for the dialog */
}

/* Modal Content within Dialog */
#exampleModal .modal-content {
  width: 100%;
  /* max-height: calc(90vh - 60px); */ /* Removed to allow content to define height */
  display: flex;
  flex-direction: column;
  /* overflow: hidden; */ /* Removed to allow full height measurement */
}

/* Modal Body - Container for the Carousel */
#exampleModal .modal-body {
  /* flex-grow: 1; */ /* Removed: height should be explicitly set by JS */
  /* overflow: hidden; */ /* Removed to allow full height measurement */
  padding: 0; /* As you have it */
  display: flex;
  flex-direction: column; /* Stack image and comments vertically */
  align-items: center;
  justify-content: flex-start; /* Align items to the top */
  /* backdrop-filter: blur(8px); */
  -webkit-backdrop-filter: blur(8px); /* Your existing style */
  background-color: rgba(0, 0, 0, 0.5); /* Your existing style */

  /* Add this for smooth height transition */
  transition: height 0.35s ease-in-out; /* Adjust timing & easing as you like */
}

/* Class to hide modal content during initial load/slide */
.modal-content-loading #imageCarousel,
.modal-content-loading .image-comments-container {
  opacity: 0;
  transition: opacity 0s; /* No transition initially, then enable for fade-in */
}

/* Carousel Styling */
#imageCarousel {
  width: 100%;
  /* height: auto; Let content dictate height, or set specific percentage */
  flex-shrink: 0; /* Prevent carousel from shrinking if comments are too long */
}

#imageCarousel .carousel-inner {
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden; /* Key for clipping sliding items */
}

#imageCarousel .carousel-item {
  width: 100%;
  height: 100%;
  text-align: center;
}

/* Styling for the Image itself */
#imageCarousel .carousel-item img {
  display: block;
  max-width: 100%;
  max-height: 70vh; /* Your key sizing constraint */
  width: auto;
  height: auto;
  margin: 0 auto;
  object-fit: contain; /* Ensures entire image is visible */
}

/* Carousel control buttons - always focused style */
#imageCarousel .carousel-control-prev,
#imageCarousel .carousel-control-next {
  opacity: 0.9; /* Set to Bootstrap's typical hover/focus opacity */
}

/* Styles for the comments section within the modal */
.image-comments-container {
  padding: var(--spacing-md);
  background: rgba(0, 0, 0, 0.5); /* Match modal body background */
  border-top: 1px solid rgba(255, 255, 255, 0.2); /* Subtle separator */
  width: 100%;
}

.comments-list {
  margin-bottom: var(--spacing-md);
}

.comment-item {
  background: rgba(
    255,
    255,
    255,
    0.1
  ); /* Slightly lighter than container */
  padding: var(--spacing-sm);
  border-radius: var(
    --border-radius
  ); /* Applied border radius to match .detail-item */
  margin-bottom: var(--spacing-sm);
  position: relative; /* Needed for absolute positioning of the delete button */
  display: flex; /* Add flex display */
  flex-wrap: wrap; /* Allow items to wrap */
  justify-content: space-between; /* Push user and timestamp to ends */
  align-items: flex-start; /* Align items to the top */
}

.comment-user {
  font-weight: bold;
  color: var(--color-primary);
  margin-bottom: var(--spacing-xxs); /* Keep existing margin */
  /* No change to flex properties, default is fine */
}

.comment-text {
  color: var(--color-primary);
  word-wrap: break-word;
  margin-bottom: var(--spacing-xxs);
  width: 100%; /* Make text take full width to start on new line */
  order: 3; /* Ensure text comes after user and timestamp */
  text-align: left; /* Align text to the left */
}

.comment-timestamp {
  font-size: 0.8rem;
  margin-right: var(--spacing-lg); /* Increased right margin */
  /* No change to flex properties, default is fine */
  /* order: 2; (Implicitly after user, before text if not wrapped) */
}

/* Removed the more specific rule as .secondary-text should now apply directly */

.comment-form textarea {
  background-color: rgba(255, 255, 255, 0.1);
  color: var(--color-primary);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: var(--border-radius-sm);
}

.comment-form textarea:focus {
  background-color: rgba(
    255,
    255,
    255,
    0.1
  ); /* Keep background same on focus */
  border-color: var(
    --color-primary
  ); /* Change border color on focus */
  color: var(--color-primary); /* Keep text color same as unfocused */
  outline: none; /* Remove default outline */
  box-shadow: none; /* Remove default box shadow on focus */
}

.comment-form textarea::placeholder {
  color: var(--color-secondary-text);
}

/* New styles for comment input wrapper */
.comment-input-wrapper {
  position: relative; /* For positioning the button */
  display: flex;
  align-items: center; /* Vertically align items if button/textarea heights differ */
}

.comment-input-wrapper textarea.comment-input {
  flex-grow: 1; /* Textarea takes up available space */
  margin-right: var(
    --spacing-sm
  ); /* Add some space between textarea and button */
  /* Adjust padding if needed to ensure text doesn't go under the button */
  /* padding-right: 50px; /* Example: if button is roughly 40px wide + spacing */
}

.comment-input-wrapper .comment-submit-btn {
  /* The button is already styled, we might not need much here */
  /* position: absolute; */ /* If you wanted it absolutely positioned inside */
  /* right: var(--spacing-sm); */
  /* top: 50%; */
  /* transform: translateY(-50%); */
  margin-top: 0; /* Override previous margin-top */
  white-space: nowrap; /* Prevent button text from wrapping */
}

/* Style for the comment post button */
.comment-form .comment-submit-btn {
  margin-top: var(--spacing-md); /* Reverted space */
}

.comment-form .btn-primary {
  background-color: var(--color-brand);
  border-color: var(--color-brand);
  color: var(--color-primary);
}

.header-button:has(> svg) {
  padding: 8px var(--spacing-sm);
}

.project-detail-subtitle {
  margin-top: var(--spacing-xxs);
}

/* Style for comment delete button */
.comment-delete-btn {
  position: absolute;
  top: var(--spacing-xxs); /* Position from the top */
  right: var(--spacing-xxs); /* Position from the right */
  width: 32px; /* Revert width to 32px */
  height: 32px; /* Revert height to 32px */
  padding: 0;
  border-radius: 50%;
  transform: none; /* Remove vertical centering transform */
  display: flex;
  align-items: center;
  justify-content: center;
  box-sizing: border-box;
}

.comment-delete-btn svg {
  transform: translate(
    -1px,
    0.5px
  ); /* Keep transform for centering in 32px button */
  /* Removed width and height to use SVG attributes (16px) */
  /* stroke-width is handled by SVG attribute or defaults */
}

/* Style for comments loading spinner */
#comments-loading-spinner .spinner-border {
  color: var(--color-primary); /* Set spinner color */
}

/* Style for image delete button SVG */
.delete-image-button button svg {
  transform: translateY(-1.5px); /* Raise SVG slightly */
}

@media (max-width: 768px) {
  #exampleModal .modal-dialog {
    transform: scale(1);
  }
}

@media (max-width: 600px) {
  .dashboard {
    width: 95%;
    top: 10%;
    padding: var(--spacing-md);
  }

  .project-details {
    grid-template-columns: 1fr;
  }

  .image-gallery {
    grid-template-columns: 1fr;
  }
}

@media (max-width: 480px) {
  .dashboard {
    width: 100%;
  }
  .updates-header > a {
    min-width: fit-content;
    text-align: center;
  }

  .header-button,
  .header-button:has(> svg) {
    padding: 4px var(--spacing-xs);
  }

  .dashboard {
    padding: var(--spacing-sm);
  }

  .detail-item {
    padding: var(--spacing-sm);
  }

  .dashboard-header {
    font-size: 1.5rem;
  }

  .project-header {
    margin-bottom: var(--spacing-sm);
  }
}
